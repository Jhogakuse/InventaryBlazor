@using Entities
@using Business

@inject NavigationManager NavManager

    <EditForm Model="product">
        <div class="form-group">
            <label>Nombre del producto:</label>
            <InputText @bind-Value="product.ProductName" class="form-control" />
        </div>
        <div class="form-group">
            <label>Descripción:</label>
            <InputTextArea @bind-Value="product.ProductDescription" class="form-control" />
        </div>
        <div class="form-group">
            <label>Categoria:</label>
            <InputSelect @bind-Value="product.CategoryId" class="form-control">
                @foreach (var category in Categories)
                {
                    if (category.CategoryId == product.CategoryId)
                    {
                        <option value="@category.CategoryId" selected>@category.CategoryName</option>
                    }
                    else
                    {
                        <option value="@category.CategoryId">@category.CategoryName</option>
                    }
                }
            </InputSelect>
        </div>
        <input type="button" value="Modificar Producto" @onclick="UpdateProduct" class="btn btn-success"/>
    </EditForm>

@code {
    [Parameter]
    public string IdProduct { get; set; }

    ProductEntity product = new ProductEntity();
    List<CategoryEntity> Categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        Categories = B_Category.CategoryList();
        product = B_Product.ProductById(IdProduct);
    }

    private void UpdateProduct()
    {
        B_Product.UpdateProduct(product);
        NavManager.NavigateTo("product/list");
    }
}
