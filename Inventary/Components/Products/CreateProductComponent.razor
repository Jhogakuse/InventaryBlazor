@using Entities
@using Business

@inject NavigationManager NavManager

<div>
    <EditForm Model="product">
        <div class="form-group">
            <label>Referencia:</label>
            <InputText @bind-Value="product.ProductId" class="form-control" />
        </div>
        <div class="form-group">
            <label>Nombre del producto:</label>
            <InputText @bind-Value="product.ProductName" class="form-control" />
        </div>
        <div class="form-group">
            <label>Descripción:</label>
            <InputTextArea @bind-Value="product.ProductDescription" class="form-control" />
        </div>
        <div class="form-group">
            <label>Categoria:</label>
            <InputSelect @bind-Value="product.CategoryId" class="form-control">
                @foreach (var category in Categories) { 
                    <option value="@category.CategoryId">@category.CategoryName</option>
                }
            </InputSelect>
        </div>

        <input type="button" value="Agregar Producto" @onclick="SaveProduct" class="btn btn-success"/>
    </EditForm>
</div>

@code {
    ProductEntity product = new ProductEntity();
    List<CategoryEntity> Categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        Categories = B_Category.CategoryList();
        // return base.OnInitializedAsync();
    }

    private void SaveProduct() {
        B_Product.CreateProduct(product);
        NavManager.NavigateTo("product/list");
    }

}
